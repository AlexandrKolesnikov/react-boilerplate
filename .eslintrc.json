{
  "extends": [
    "airbnb-typescript"
  ],
  "parserOptions": {
    "project": "./tsconfig.json"
  },
  "plugins": [
    "@typescript-eslint"
  ],
  "rules": {
    "jsx-a11y/anchor-is-valid": [ "error", {
      "components": [ "Link" ],
      "specialLink": [ "preventDefault", "to" ],
      "aspects": [ "noHref", "invalidHref", "preferButton" ]
    }],
    "@typescript-eslint/indent": ["error", 2, {
      "SwitchCase": 1,
      "ignoredNodes": ["TSTypeParameterInstantiation"]
    }],
    "generator-star-spacing": [
      1,
      {
        "before": false,
        "after": true
      }
    ],
    "import/prefer-default-export": 0,
    "import/no-extraneous-dependencies": [
      "error",
      {
        "devDependencies": [
          "webpack/**/*.*",
          "server/**/*.*",
          "stories/**/*.*",
          "**/*.test.*",
          "setupTests.ts"
        ]
      }
    ],
    "lines-between-class-members": [
      "error",
      "always",
      {
        "exceptAfterSingleLine": true
      }
    ],
    "max-len": [
      "error",
      {
        "code": 140
      }
    ],
    "no-console": [
      "error",
      {
        "allow": ["warn"]
      }
    ],
    "no-underscore-dangle": [
      "error",
      {
        "allow": [
          "__REDUX_DEVTOOLS_EXTENSION__"
        ]
      }
    ],
    "object-curly-spacing": ["error", "always"],
    "padding-line-between-statements": [
      1,
      {
        "blankLine": "always",
        "prev": "*",
        "next": [
          "const",
          "let",
          "var",
          "return"
        ]
      },
      {
        "blankLine": "always",
        "prev": [
          "const",
          "let",
          "var",
          "import"
        ],
        "next": "*"
      },
      {
        "blankLine": "any",
        "prev": [
          "const",
          "let",
          "var"
        ],
        "next": [
          "const",
          "let",
          "var"
        ]
      },
      {
        "blankLine": "any",
        "prev": [
          "import"
        ],
        "next": [
          "import"
        ]
      }
    ],
    "padded-blocks": [
      1,
      {
        "blocks": "never",
        "classes": "never"
      }
    ],
    "react/jsx-max-props-per-line": [
      1,
      {
        "maximum": 1,
        "when": "multiline"
      }
    ],
    "react/jsx-props-no-spreading": 0,
    "react/static-property-placement": [
      "error",
      "static public field"
    ],
    "space-in-parens": [
      1,
      "never"
    ],
    "jsx-a11y/click-events-have-key-events": 0,
    "react/button-has-type": 0,
    "jsx-a11y/label-has-for": 0,
    "jsx-a11y/label-has-associated-control": [
      1,
      {
        "assert": "nesting"
      }
    ],
    "react/sort-comp": ["error", {
      "order": [
        "static-variables",
        "static-methods",
        "instance-variables",
        "lifecycle",
        "/^on.+$/",
        "getters",
        "setters",
        "/^(get|set)(?!(InitialState$|DefaultProps$|ChildContext$)).+$/",
        "instance-methods",
        "everything-else",
        "rendering"
      ],
      "groups": {
        "lifecycle": [
          "displayName",
          "propTypes",
          "contextTypes",
          "childContextTypes",
          "mixins",
          "statics",
          "defaultProps",
          "constructor",
          "getDefaultProps",
          "getInitialState",
          "state",
          "getChildContext",
          "getDerivedStateFromProps",
          "componentWillMount",
          "UNSAFE_componentWillMount",
          "componentDidMount",
          "componentWillReceiveProps",
          "UNSAFE_componentWillReceiveProps",
          "shouldComponentUpdate",
          "componentWillUpdate",
          "UNSAFE_componentWillUpdate",
          "getSnapshotBeforeUpdate",
          "componentDidUpdate",
          "componentDidCatch",
          "componentWillUnmount"
        ],
        "rendering": [
          "/^render.+$/",
          "render"
        ]
      }
    }]
  },
  "overrides": [
    {
      "files": ["**/*.tsx"],
      "rules": {
        "react/prop-types": "off"
      }
    }
  ],
  "env": {
    "browser": true,
    "jest": true
  }
}
