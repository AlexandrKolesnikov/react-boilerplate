@function linear-dynamic-size-relate-vw($sizeAtWidth1, $sizeAtWidth2, $width1, $width2) {
  $a: ($sizeAtWidth2 - $sizeAtWidth1) / ($width2 - $width1);
  $b: $sizeAtWidth2 - $a * $width2;

  @return calc(#{$a * 100}vw + #{$b}px);
}


@function linear-dynamic-size-relate-vh($sizeAtHeight1, $sizeAtHeight2, $height1, $height2) {
  $a: ($sizeAtHeight2 - $sizeAtHeight1) / ($height2 - $height1);
  $b: $sizeAtHeight2 - $a * $height2;

  @return calc(#{$a * 100}vh + #{$b}px);
}

@function str-replace($string, $search, $replace: "") {
  $index: str-index($string, $search);

  @if ($index) {
    @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
  }

  @return $string;
}

@mixin font-face($name, $path, $weight: null, $style: null, $exts: eot woff2 woff ttf svg) {
  $src: null;
  $extmods: (eot: "?", svg: "#" + str-replace($name, " ", "_"));
  $formats: (otf: "opentype",ttf: "truetype");

  @each $ext in $exts {
    $extmod: if(map-has-key($extmods, $ext), $ext + map-get($extmods, $ext), $ext);
    $format: if(map-has-key($formats, $ext), map-get($formats, $ext), $ext);
    $src: append($src, url(quote($path + "." + $extmod)) format(quote($format)), comma);

    @font-face {
      font-family: quote($name);
      font-style: $style;
      font-weight: $weight;
      src: $src;
    }
  }
}

@mixin placeholder-color($color) {
  &::-webkit-input-placeholder { // WebKit browsers
    color: $color;
  }
  &:-moz-placeholder { // Mozilla Firefox 4 to 18
    color: $color;
  }
  &::-moz-placeholder { // Mozilla Firefox 19+
    color: $color;
  }
  &:-ms-input-placeholder { // Internet Explorer 10+
    color: $color;
  }
}

